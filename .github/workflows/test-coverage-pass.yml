name: test-coverage

on:
  push:
    branches: [ main ]
  #    path:
  #      - 'auth/**'
  pull_request:
    branches: [ main ]
#    path:
#      - 'auth/**'

jobs:
  converage:
    name: Test coverage and the badge

    runs-on: ubuntu-latest

    # Service containers to run with `runner-job`
    services:
      # Label used to access the service container
      postgres:
        # Docker Hub image
        image: postgres
        # Provide the password for postgres
        env:
          POSTGRES_PASSWORD: postgres_password
          POSTGRES_USER: postgres
        # Set health checks to wait until postgres has started
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          # Maps tcp port 5432 on service container to the host
          - 5432:5432


    steps:

      - uses: actions/checkout@v2

      - name: Updating Test Passing Badge To Failed
        uses: schneegans/dynamic-badges-action@v1.0.0
        with:
          auth: ${{ secrets.GT_AUTH_SECRET }}
          gistID: 25afa5f62258dc4f590f218043d54521
          filename: dav-express-pg-test-pass-badge.json
          label: Tests
          message: failed
          color: critical

      - name: Migrate PostgreSQL DB
        run: npm install && npm run db:migrate

      - name: Setup Node.js environment and Test coverage
        env:
          JWT_SECRET: ${{ secrets.JWT_SECRET }}
          PG_HOST: localhost
          PG_DATABASE: postgres
          PG_USER: runner
          PG_PASSWORD: postgres_password
          PG_PORT: 5432
        run: npm install && npm run test:cover

      - name: Set coverage badge color
        if: env.GH_COVERAGE < 40
        run: echo "GH_COVERAGE_COLOR=red" >> $GITHUB_ENV

      - name: Set coverage badge color
        if: env.GH_COVERAGE >= 40 && env.GH_COVERAGE < 60
        run: echo "GH_COVERAGE_COLOR=orange" >> $GITHUB_ENV

      - name: Set coverage badge color
        if: env.GH_COVERAGE >= 60 && env.GH_COVERAGE < 80
        run: echo "GH_COVERAGE_COLOR=green" >> $GITHUB_ENV

      - name: Set coverage badge color
        if: env.GH_COVERAGE >= 80
        run: echo "GH_COVERAGE_COLOR=brightgreen" >> $GITHUB_ENV

      - name: Updating Coverage Badge
        uses: schneegans/dynamic-badges-action@v1.0.0
        with:
          auth: ${{ secrets.GT_AUTH_SECRET }}
          gistID: 8a44505b5c3b4a79f719497682ed4952
          filename: dav-express-pg-coverage.json
          label: Coverage
          message: ${{ env.GH_COVERAGE }}%
          color: ${{ env.GH_COVERAGE_COLOR }}

      - name: Updating Test Passing Badge To Passed
        uses: schneegans/dynamic-badges-action@v1.0.0
        with:
          auth: ${{ secrets.GT_AUTH_SECRET }}
          gistID: 25afa5f62258dc4f590f218043d54521
          filename: dav-express-pg-test-pass-badge.json
          label: Tests
          message: passing
          color: success
