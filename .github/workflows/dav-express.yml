name: dav-express-test

on:
  push:
    branches: [ main ]
#    path:
#      - 'auth/**'
  pull_request:
    branches: [ main ]
#    path:
#      - 'auth/**'

jobs:
  test:
    name: Tests on different node versions

    runs-on: ubuntu-latest

    services:
      # Label used to access the service container
      postgres:
        # Docker Hub image
        image: postgres
        # Provide the password for postgres
        env:
          POSTGRES_PASSWORD: postgres_password
          POSTGRES_USER: postgres
        # Set health checks to wait until postgres has started
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          # Maps tcp port 5432 on service container to the host
          - 5432:5432

    strategy:
      matrix:
        node-version: [12.x, 14.x]

    steps:
      - uses: actions/checkout@v2

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v2.1.2 #optional? investigate
        with:
          node-version: ${{ matrix.node-version }}

      - id: node-v
        run: |
          ver=$(echo ${{matrix.node-version}} | cut -d'.' -f 1)
          echo "::set-output name=ver::$ver"

      - run: npm ci
      - run: npm run db:migrate
        env:
          PG_HOST: localhost
          PG_DATABASE: postgres
          PG_USER: postgres
          PG_PASSWORD: postgres_password
          PG_PORT: 5432
      - run: npm run test:ci
        env:
          PG_HOST: localhost
          PG_DATABASE: postgres
          PG_USER: postgres
          PG_PASSWORD: postgres_password
          PG_PORT: 5432
          JWT_SECRET: ${{ secrets.JWT_SECRET }}
